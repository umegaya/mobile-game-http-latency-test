// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LatencyResearchGrpc {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SFWxhdGVuY3lfcmVzZWFyY2hfZ3JwYyIiCg5NZWFzdXJl",
            "UmVxdWVzdBIQCghzdGFydF90cxgBIAEoBCIgCgxNZWFzdXJlUmVwbHkSEAoI",
            "c3RhcnRfdHMYASABKAQiDwoNSGVhbHRoUmVxdWVzdCIgCgtIZWFsdGhSZXBs",
            "eRIRCglkaWFnbm9zZXMYASABKAkyuAEKB1NlcnZpY2USVwoHTWVhc3VyZRIl",
            "LmxhdGVuY3lfcmVzZWFyY2hfZ3JwYy5NZWFzdXJlUmVxdWVzdBojLmxhdGVu",
            "Y3lfcmVzZWFyY2hfZ3JwYy5NZWFzdXJlUmVwbHkiABJUCgZIZWFsdGgSJC5s",
            "YXRlbmN5X3Jlc2VhcmNoX2dycGMuSGVhbHRoUmVxdWVzdBoiLmxhdGVuY3lf",
            "cmVzZWFyY2hfZ3JwYy5IZWFsdGhSZXBseSIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LatencyResearchGrpc.MeasureRequest), global::LatencyResearchGrpc.MeasureRequest.Parser, new[]{ "StartTs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LatencyResearchGrpc.MeasureReply), global::LatencyResearchGrpc.MeasureReply.Parser, new[]{ "StartTs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LatencyResearchGrpc.HealthRequest), global::LatencyResearchGrpc.HealthRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LatencyResearchGrpc.HealthReply), global::LatencyResearchGrpc.HealthReply.Parser, new[]{ "Diagnoses" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MeasureRequest : pb::IMessage<MeasureRequest> {
    private static readonly pb::MessageParser<MeasureRequest> _parser = new pb::MessageParser<MeasureRequest>(() => new MeasureRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MeasureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LatencyResearchGrpc.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeasureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeasureRequest(MeasureRequest other) : this() {
      startTs_ = other.startTs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeasureRequest Clone() {
      return new MeasureRequest(this);
    }

    /// <summary>Field number for the "start_ts" field.</summary>
    public const int StartTsFieldNumber = 1;
    private ulong startTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StartTs {
      get { return startTs_; }
      set {
        startTs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MeasureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MeasureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTs != other.StartTs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTs != 0UL) hash ^= StartTs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartTs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(StartTs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartTs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MeasureRequest other) {
      if (other == null) {
        return;
      }
      if (other.StartTs != 0UL) {
        StartTs = other.StartTs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StartTs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MeasureReply : pb::IMessage<MeasureReply> {
    private static readonly pb::MessageParser<MeasureReply> _parser = new pb::MessageParser<MeasureReply>(() => new MeasureReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MeasureReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LatencyResearchGrpc.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeasureReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeasureReply(MeasureReply other) : this() {
      startTs_ = other.startTs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MeasureReply Clone() {
      return new MeasureReply(this);
    }

    /// <summary>Field number for the "start_ts" field.</summary>
    public const int StartTsFieldNumber = 1;
    private ulong startTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StartTs {
      get { return startTs_; }
      set {
        startTs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MeasureReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MeasureReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTs != other.StartTs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTs != 0UL) hash ^= StartTs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartTs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(StartTs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StartTs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MeasureReply other) {
      if (other == null) {
        return;
      }
      if (other.StartTs != 0UL) {
        StartTs = other.StartTs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StartTs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HealthRequest : pb::IMessage<HealthRequest> {
    private static readonly pb::MessageParser<HealthRequest> _parser = new pb::MessageParser<HealthRequest>(() => new HealthRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LatencyResearchGrpc.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthRequest(HealthRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthRequest Clone() {
      return new HealthRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class HealthReply : pb::IMessage<HealthReply> {
    private static readonly pb::MessageParser<HealthReply> _parser = new pb::MessageParser<HealthReply>(() => new HealthReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LatencyResearchGrpc.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthReply(HealthReply other) : this() {
      diagnoses_ = other.diagnoses_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthReply Clone() {
      return new HealthReply(this);
    }

    /// <summary>Field number for the "diagnoses" field.</summary>
    public const int DiagnosesFieldNumber = 1;
    private string diagnoses_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Diagnoses {
      get { return diagnoses_; }
      set {
        diagnoses_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Diagnoses != other.Diagnoses) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Diagnoses.Length != 0) hash ^= Diagnoses.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Diagnoses.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Diagnoses);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Diagnoses.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Diagnoses);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthReply other) {
      if (other == null) {
        return;
      }
      if (other.Diagnoses.Length != 0) {
        Diagnoses = other.Diagnoses;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Diagnoses = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
